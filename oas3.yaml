openapi: 3.0.0
info:
  version: '1.0'
  title: "EventManager"
  description: API per gestire eventi.
  license:
    name: MIT
servers:
  - url: http://localhost:8000/api/v1
    description: Localhost
paths:
  /creazioneEvento/pubblico:
    post:
      description: Inviare le info per creare un nuovo evento pubblico.
      summary: Crea un nuovo evento pubblico
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicEvent'
      responses:
        '201':
          description: 'Evento pubblico creato. link alla locazione del evento'
          headers:
            'Location':
              schema:
                type: string
              description: Link all'evento pubblico nuovo creato.

  /creazioneEvento/personale:
    post:
      description: 
        Inviare le info per creare un nuovo evento personale.
      summary: Crea un nuovo evento personale
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalEvent'
      responses:
        '201':
          description: 'Evento personale creato. link alla locazione del evento'
          headers:
            'Location':
              schema:
                type: string
              description: Link all'evento personale nuovo creato.
  
  /books:
    get:
      description: >-
        Gets the list of books.
      summary: View all books
      responses:
        '200':
          description: 'Collection of books'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /booklendings:
    post:
      description: >-
        Creates a new booklending.
      summary: Borrow a book
      responses:
        '201':
          description: 'Booklending created. Link in the Location header'
          headers:
            'Location':
              schema:
                type: string
              description: Link to the newly created booklending.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booklending'
          
components:
  schemas:
    PublicEvent:
      type: object
      required:
      - data
      - ora
      - durata
      - maxPers
      - categoria
      - nomeAtt
      - luogoEv
      properties:
        data:
          type: string
          format: date
          description: 'Data dell''evento'
        ora:
          type: string
          description: 'Ora dell''evento'
        durata:
          type: number
          description: 'Durata dell''evento'
        maxPers:
          type: integer
          description: 'Numero massimo delle persone'
        categoria: 
          type: string
          description: 'Categoria dell''evento'
        nomeAtt:
          type: string
          description: 'Nome dell''Evento'
        luogoEv:
          type: object
          properties:
            indirizzo:
              type: string
              description: 'Inidirizzo dell''Evento'
            citta:
              type: string
              description: 'Città dell''Evento'
            
    PersonalEvent:
      type: object
      required:
      - data
      - ora
      - durata
      - categoria
      - nomeAtt
      properties:
        data:
          type: string
          format: date
          description: 'Data dell''evento'
        ora:
          type: string
          description: 'Ora dell''evento'
        durata:
          type: number
          description: 'Durata dell''evento'
        categoria: 
          type: string
          description: 'Categoria dell''evento'
        nomeAtt:
          type: string
          description: 'Nome dell''Evento'
        luogoEv:
          type: object
          properties:
            indirizzo:
              type: string
              description: 'Inidirizzo dell''Evento'
            citta:
              type: string
              description: 'Città dell''Evento'
    
    Student:
      type: object
      required:
        - id
        - email
      properties:
        id:
          type: integer
          description: 'ID of the user'
        email:
          type: string
          description: 'Email address of the user'
    Book:
      type: object
      required:
        - title
        - author
        - ISBN
        - status
      properties:
        title:
          type: string
          description: 'Title of the book'
        author:
          type: string
          description: 'Author of the book'
        ISBN:
          type: string
          description: 'ISBN of the book'
        status:
          type: string
          enum: [available, lended]
          description: 'Tells whether the book is currently available or not'
    Booklending:
      type: object
      required:
      - student
      - book
      properties:
        user:
          type: string
          description: 'Link to the user'
        book:
          type: integer
          description: 'Link to the book'